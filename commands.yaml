categories:
  - name: Demo
    description: A collection of demo commands showing how to use the CLI
    commands:
      # basic usage
      - name: basic
        description: Create a command and call it from the CLI e.g. `olcs demo.basic`
        exec: echo "Hello, world!"

      - name: args
        description: >
          Specify an argument to the command for replacement and it can be passed as a command line argument 
          e.g. `olcs demo.args --arg name=Dave`
        exec: echo Hello, {{ name }}
        args:
          - name: name
            prompt: Enter your name

      - name: interactive
        description: >
          Running in interactive mode will present a navigable menu of commands. Where required, users will be 
          prompted for input. Try running `olcs -i` and find this command in the list (Demo > interactive).
        exec: echo {{ name }}, we are running interactively!
        args:
          - name: name
            prompt: Enter your name

      # special args
      - name: config
        description: Some parameters can be passed in from the config file (use `olcs -s` to select which config to use)
        exec: echo "The current subscription ID is {{ config.subscription_id }}"

      - name: namespace
        description: >
          Using the 'i_param' (i.e. interactive_parameter) filter will cause the CLI to present options for the user to 
          select for the namespace in interactive mode. The namespace can be overridden on the command line
          e.g. `olcs demo.namespace --arg namespace="-n olcs"`. ** Please note that the namespace must be in quotes **
        exec: echo "You selected the {{ "namespace" | i_param }} namespace"

  - name: Az
    subcategories:
      - name: Subscription
        commands:
          - name: login
            description: "Log in to Azure"
            exec: "az login"

          - name: login-sp
            description: "Log in using a service principal (client ID, secret, tenant)"
            exec: "az login --service-principal -u {{client_id}} -p {{secret}} --tenant {{tenant}}"

          - name: list-subscriptions
            description: "List all subscriptions available to the logged-in account"
            exec: "az account list --output table"

          - name: active-subscription
            description: "Show the currently active subscription"
            exec: "az account show --query name -o tsv"

          - name: switch-subscription
            description: "Switch the active subscription"
            exec: "az account set --subscription {{config.subscription_id}}"

      - name: Key Vault
        commands:
          - name: list-secrets
            description: List all secrets in Key Vault
            exec: az keyvault secret list --vault-name {{config.key_vault}} --query \"[].id\"

          - name: get-secret-value
            description: Get the value of a secret
            pre_command: Az.KeyVault.list-secrets
            exec: az keyvault secret show --vault-name {{config.key_vault}} --name {{secret}} --query \"value\" -o tsv
            args:
              - name: secret
                prompt: Enter secret name

  - name: k8s
    subcategories:
      - name: Config
        commands:
          - name: view-config
            description: View Kubernetes config
            exec: kubectl config view

          - name: view-config-minified
            description: View minified config
            exec: kubectl config view --minify

      - name: Context
        commands:
          - name: list-contexts
            description: List available contexts
            exec: kubectl config get-contexts

          - name: get-context
            description: Show current context
            exec: kubectl config current-context

          - name: set-context
            description: Create / Update context
            pre_command: k8s.Config.list-context
            exec: >
              kubectl config set-context {{context}}
              {% if namespace %} --namespace={{namespace}}{% endif %}
              {% if cluster %} --cluster={{cluster}}{% endif %}
              {% if user %} --user={{user}}{% endif %}
            args:
              - name: context
                prompt: Enter context name
              - name: namespace
                prompt: Namespace to set as default
                optional: true
              - name: cluster
                prompt: Cluster to set for context (optional)
                optional: true
              - name: user
                prompt: User to set for context (optional)
                optional: true

          - name: set-current-namespace
            description: Set default namespace for current context
            exec: kubectl config set-context --current --namespace={{namespace}}
            args:
              - name: namespace
                prompt: Namespace to set as default in context
                default: olcs

          - name: switch-context
            description: Switch to a different context
            exec: kubectl config use-context {{context}}
            pre_command: k8s.Config.list-context
            args:
              - name: context
                prompt: Enter context name

      - name: Clusters
        commands:
          - name: list-clusters
            description: List clusters in config
            exec: kubectl config get-clusters

          - name: add-cluster-credentials
            description: Add AKS cluster credentials to context
            pre_command: k8s.Config.list-clusters
            exec: az aks get-credentials --resource-group {{resource_group}} --name {{cluster_name}}
            args:
              - name: cluster_name
                prompt: Enter AKS cluster name

      - name: Namespaces
        commands:
          - name: list-namespaces
            description: List namespaces
            exec: kubectl get namespaces

      - name: Deployments
        commands:
          - name: list-deployments
            description: List deployments in namespace
            exec: kubectl get deployments {{"namespace" | i_param}}

          - name: scale-deployment
            description: Scale a deployment
            exec: kubectl scale deployment {{deployment}} --replicas={{replicas}}
            args:
              - name: deployment
                prompt: Enter deployment name
              - name: replicas
                prompt: Enter number of replicas

      - name: Pods
        commands:
          - name: list-pods
            description: List pods in namespace
            exec: kubectl get pods {{"namespace" | i_param}}

          - name: get-running-pods
            description: List pods with status=Running
            exec: kubectl get pods {{"namespace" | i_param}} --field-selector=status.phase=Running

          - name: get-not-running-pods
            description: List pods not in Running state
            exec: kubectl get pods {{"namespace" | i_param}} | grep -v Running

          - name: pod-logs
            description: Get logs for a pod
            pre_command: k8s.Pods.list-pods
            exec: kubectl logs {{pod}} {{"namespace" | i_param}}
            args:
              - name: pod
                prompt: Enter pod name

          - name: pod-logs-json
            description: Get logs for a pod whose logs are in JSON format
            pre_command: k8s.Pods.list-pods
            exec: >
              kubectl logs {{pod}} {{"namespace" | i_param}}
              | grep '^{.*}$' 
              | jq -C 'if (.stack_trace? | type == "string") then .stack_trace |= split("\n") else . end'
            args:
              - name: pod
                prompt: Enter pod name

          - name: container-logs
            description: Get logs for a specific container in a pod
            pre_command: k8s.Pods.list-pods
            exec: kubectl logs pod/{{pod}} -c {{container}} {{"namespace" | i_param}}
            args:
              - name: pod
                prompt: Enter pod name
              - name: container
                prompt: Enter container name

          - name: pod-details
            description: Describe a pod
            pre_command: k8s.Pods.list-pods
            exec: kubectl describe pod {{pod}} -n {{"namespace" | i_param}}
            args:
              - name: pod
                prompt: Enter pod name

          - name: pod-ports
            description: Check open ports inside a pod
            pre_command: k8s.Pods.list-pods
            exec: kubectl exec -it {{pod}} -n {{"namespace" | i_param}} -- netstat -tulnp
            args:
              - name: pod
                prompt: Enter pod name

          - name: set-replicas
            description: Scale a deployment
            exec: kubectl scale deployment {{deployment}} --replicas={{replicas}}
            args:
              - name: deployment
                prompt: Enter deployment name
              - name: replicas
                prompt: Enter number of replicas

      - name: Secrets
        commands:
          - name: list-secrets
            description: List all secrets
            exec: kubectl get secrets -n {{namespace}}

          - name: get-secret
            description: Get a secret by name
            exec: kubectl get secret {{secret}} -n {{namespace}}
            args:
              - name: secret
                prompt: Enter secret name

          - name: create-tls-secret
            description: Create a TLS secret
            exec: kubectl create secret tls tls-secret --cert={{cert}} --key={{key}} --namespace={{namespace}}
            args:
              - name: cert
                prompt: Enter certificate file
                default: tls.crt
              - name: key
                prompt: Enter key file
                default: tls.key
              - name: namespace
                prompt: Enter namespace
                default: olcs

          - name: delete-secret
            description: Delete a secret
            exec: kubectl delete secret {{secret}} {{"namespace" | i_param}}
            args:
              - name: secret
                prompt: Enter secret name